/**
Copyright 2021 Forestry.io Holdings, Inc.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
import React from 'react';
import { useDocumentCreatorPlugin } from './hooks/use-content-creator';
import { TinaCloudMediaStoreClass } from './auth';
import type { TinaIOConfig } from './client/index';
import type { TinaCMS } from '@tinacms/toolkit';
import type { formifyCallback } from './hooks/use-graphql-forms';
export declare const TinaCMSProvider2: ({ children, branch, clientId, isLocalClient, cmsCallback, mediaStore, tinaioConfig, ...props }: {
    /** The query from getStaticProps */
    query?: string;
    /** Any variables from getStaticProps */
    variables?: object;
    /** The `data` from getStaticProps */
    data: object;
    /** Your React page component */
    children: () => React.ReactNode;
    /** Point to the local version of GraphQL instead of tina.io */
    isLocalClient?: boolean;
    /** The base branch to pull content from. Note that this is ignored for local development */
    branch?: string;
    /** Your clientID from tina.aio */
    clientId?: string;
    /** Callback if you need access to the TinaCMS instance */
    cmsCallback?: (cms: TinaCMS) => TinaCMS;
    /** Callback if you need access to the "formify" API */
    formifyCallback?: formifyCallback;
    /** Callback if you need access to the "document creator" API */
    documentCreatorCallback?: Parameters<typeof useDocumentCreatorPlugin>[0];
    /** TinaCMS media store instance */
    mediaStore?: TinaCloudMediaStoreClass | Promise<TinaCloudMediaStoreClass>;
    tinaioConfig?: TinaIOConfig;
}) => JSX.Element;
/**
 * A convenience function which makes a GraphQL request
 * to a local GraphQL server and ensures the response fits
 * the shape expected by Tina context in your application
 */
export declare const getStaticPropsForTina: ({ query, variables, }: {
    query: string;
    variables?: object;
}) => Promise<any>;
/**
 * A convenience function which makes a GraphQL request
 * to a local GraphQL server. Only recommended for functions
 * which run at build-time like `getStaticProps` or `getStaticPaths`
 */
export declare const staticRequest: ({ query, variables, }: {
    /** A GraphQL request string */
    query: string;
    /** GraphQL variables */
    variables?: object;
}) => Promise<unknown>;
/**
 * A passthru function which allows editors
 * to know the temlpate string is a GraphQL
 * query or muation
 */
export declare function gql(strings: TemplateStringsArray): string;
