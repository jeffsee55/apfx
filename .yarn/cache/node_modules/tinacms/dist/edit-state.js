var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
(function(global, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require("react")) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self, factory(global.tinacms = {}, global.NOOP));
})(this, function(exports2, React) {
  "use strict";
  function _interopDefaultLegacy(e) {
    return e && typeof e === "object" && "default" in e ? e : { "default": e };
  }
  var React__default = /* @__PURE__ */ _interopDefaultLegacy(React);
  const TinaEditProvider = (_a) => {
    var _b = _a, {
      showEditButton
    } = _b, props = __objRest(_b, [
      "showEditButton"
    ]);
    return /* @__PURE__ */ React__default["default"].createElement(EditProvider, null, showEditButton && /* @__PURE__ */ React__default["default"].createElement(ToggleButton, null), /* @__PURE__ */ React__default["default"].createElement(TinaEditProviderInner, __spreadValues({}, props)));
  };
  const ToggleButton = () => {
    const { edit } = useEditState();
    return edit ? null : /* @__PURE__ */ React__default["default"].createElement("div", {
      style: { position: "fixed", bottom: "56px", left: "0px", zIndex: 200 }
    }, /* @__PURE__ */ React__default["default"].createElement("a", {
      href: "/admin",
      style: {
        borderRadius: "0 50px 50px 0",
        textDecoration: "none",
        background: "rgb(34, 150, 254)",
        boxShadow: "0px 1px 3px rgb(0 0 0 / 10%), 0px 2px 6px rgb(0 0 0 / 20%)",
        color: "white",
        padding: "14px 20px",
        border: "none"
      }
    }, "Edit with Tina"));
  };
  const TinaEditProviderInner = ({ children, editMode }) => {
    const { edit } = useEditState();
    if (edit) {
      return editMode;
    }
    return children;
  };
  const LOCALSTORAGEKEY = "tina.isEditing";
  const isSSR = typeof window === "undefined";
  const isEditing = () => {
    if (!isSSR) {
      const isEdit = window.localStorage.getItem(LOCALSTORAGEKEY);
      return isEdit && isEdit === "true";
    }
    return false;
  };
  const setEditing = (isEditing2) => {
    if (!isSSR) {
      window.localStorage.setItem(LOCALSTORAGEKEY, isEditing2 ? "true" : "false");
    }
  };
  const EditContext = React__default["default"].createContext({
    edit: isEditing(),
    setEdit: void 0
  });
  const EditProvider = ({ children }) => {
    const [edit, setEditState] = React.useState(isEditing());
    const setEdit = (edit2) => {
      setEditState(edit2);
      setEditing(edit2);
    };
    return /* @__PURE__ */ React__default["default"].createElement(EditContext.Provider, {
      value: { edit, setEdit }
    }, children);
  };
  const useEditState = () => {
    const { edit, setEdit } = React.useContext(EditContext);
    if (!setEdit) {
      throw new Error("No `TinaEditProvider` found");
    }
    return { edit, setEdit };
  };
  exports2.EditContext = EditContext;
  exports2.EditProvider = EditProvider;
  exports2.TinaEditProvider = TinaEditProvider;
  exports2.isEditing = isEditing;
  exports2.setEditing = setEditing;
  exports2.useEditState = useEditState;
  Object.defineProperty(exports2, "__esModule", { value: true });
  exports2[Symbol.toStringTag] = "Module";
});
