# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  sys: SystemInfo
  id: ID!
  form: JSON!
  values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Int!
}

type Query {
  getCollection(collection: String): Collection!
  getCollections: [Collection!]!
  node(id: String): Node!
  getDocument(collection: String, relativePath: String): DocumentNode!
  getDocumentList(before: String, after: String, first: Int, last: Int, filter: DocumentFilter): DocumentConnection!
  getDocumentFields: JSON!
  getLocaleInfoDocument(relativePath: String): LocaleInfoDocument!
  getLocaleInfoList(before: String, after: String, first: Int, last: Int, filter: LocaleInfoFilter): LocaleInfoConnection!
  getNewsDocument(relativePath: String): NewsDocument!
  getNewsList(before: String, after: String, first: Int, last: Int, filter: NewsFilter): NewsConnection!
  getFooterDocument(relativePath: String): FooterDocument!
  getFooterList(before: String, after: String, first: Int, last: Int, filter: FooterFilter): FooterConnection!
  getThemeDocument(relativePath: String): ThemeDocument!
  getThemeList(before: String, after: String, first: Int, last: Int, filter: ThemeFilter): ThemeConnection!
  getNavigationDocument(relativePath: String): NavigationDocument!
  getNavigationList(before: String, after: String, first: Int, last: Int, filter: NavigationFilter): NavigationConnection!
  getPageDocument(relativePath: String): PageDocument!
  getPageList(before: String, after: String, first: Int, last: Int, filter: PageFilter): PageConnection!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input LocaleInfoAuFilter {
  tel: StringFilter
  signUpLink: StringFilter
  signUpLinkPersonal: StringFilter
  signInLink: StringFilter
}

input LocaleInfoUsFilter {
  tel: StringFilter
  signUpLink: StringFilter
  signUpLinkPersonal: StringFilter
  signInLink: StringFilter
}

input LocaleInfoGbFilter {
  tel: StringFilter
  signUpLink: StringFilter
  signUpLinkPersonal: StringFilter
  signInLink: StringFilter
}

input LocaleInfoFilter {
  au: LocaleInfoAuFilter
  us: LocaleInfoUsFilter
  gb: LocaleInfoGbFilter
}

input NewsFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  image: StringFilter
  body: StringFilter
}

input FooterOfficesFilter {
  location: StringFilter
  address: StringFilter
  phone: StringFilter
}

input FooterDisclaimersFilter {
  body: StringFilter
}

input FooterFilter {
  offices: FooterOfficesFilter
  disclaimers: FooterDisclaimersFilter
}

input ThemeFilter {
  displayFont: StringFilter
  colorMode: StringFilter
}

input PageSeoFilter {
  title: StringFilter
  image: StringFilter
  description: StringFilter
}

input PageBlocksNewsNewsItemsArticleFilter {
  news: NewsFilter
}

input PageBlocksNewsNewsItemsFilter {
  article: PageBlocksNewsNewsItemsArticleFilter
}

input PageBlocksNewsFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  newsItems: PageBlocksNewsNewsItemsFilter
}

input PageBlocksStatsWithImageStatsFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
}

input PageBlocksStatsWithImageFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  image: StringFilter
  stats: PageBlocksStatsWithImageStatsFilter
}

input PageBlocksHeroActionFilter {
  callToAction: StringFilter
  linkText: StringFilter
  link: StringFilter
  linkOverride: StringFilter
  secondaryText: StringFilter
  secondaryLink: StringFilter
  secondaryLinkOverride: StringFilter
}

input PageBlocksHeroFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  style: StringFilter
  image: StringFilter
  action: PageBlocksHeroActionFilter
}

input PageBlocksSlideshowItemsActionFilter {
  callToAction: StringFilter
  linkText: StringFilter
  link: StringFilter
  linkOverride: StringFilter
  secondaryText: StringFilter
  secondaryLink: StringFilter
  secondaryLinkOverride: StringFilter
}

input PageBlocksSlideshowItemsFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  image: StringFilter
  textColor: StringFilter
  action: PageBlocksSlideshowItemsActionFilter
  overlayColor: StringFilter
  overlayOpacity: StringFilter
}

input PageBlocksSlideshowFilter {
  items: PageBlocksSlideshowItemsFilter
}

input PageBlocksComparisonTableItemsFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  bulletPoints: StringFilter
}

input PageBlocksComparisonTableActionFilter {
  callToAction: StringFilter
  linkText: StringFilter
  link: StringFilter
  linkOverride: StringFilter
  secondaryText: StringFilter
  secondaryLink: StringFilter
  secondaryLinkOverride: StringFilter
}

input PageBlocksComparisonTableFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  items: PageBlocksComparisonTableItemsFilter
  action: PageBlocksComparisonTableActionFilter
}

input PageBlocksFullScreenLogoFilter {
  slogan: StringFilter
  link: StringFilter
  image: StringFilter
  textColor: StringFilter
  overlayColor: StringFilter
  overlayOpacity: StringFilter
}

input PageBlocksFullScreenHeaderActionFilter {
  callToAction: StringFilter
  linkText: StringFilter
  link: StringFilter
  linkOverride: StringFilter
  secondaryText: StringFilter
  secondaryLink: StringFilter
  secondaryLinkOverride: StringFilter
}

input PageBlocksFullScreenHeaderFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  action: PageBlocksFullScreenHeaderActionFilter
  image: StringFilter
  textColor: StringFilter
  overlayColor: StringFilter
  overlayOpacity: StringFilter
}

input PageBlocksFeatureFeaturesFilter {
  icon: StringFilter
  name: StringFilter
  description: StringFilter
}

input PageBlocksFeatureFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  featureStyle: StringFilter
  features: PageBlocksFeatureFeaturesFilter
  image: StringFilter
  textColor: StringFilter
  overlayColor: StringFilter
  overlayOpacity: StringFilter
}

input PageBlocksScreenShotFeatureActionFilter {
  callToAction: StringFilter
  linkText: StringFilter
  link: StringFilter
  linkOverride: StringFilter
  secondaryText: StringFilter
  secondaryLink: StringFilter
  secondaryLinkOverride: StringFilter
}

input PageBlocksScreenShotFeatureTestimonialAuthorFilter {
  name: StringFilter
  avatar: StringFilter
}

input PageBlocksScreenShotFeatureTestimonialFilter {
  quote: StringFilter
  author: PageBlocksScreenShotFeatureTestimonialAuthorFilter
}

input PageBlocksScreenShotFeatureFilter {
  title: StringFilter
  subTitle: StringFilter
  description: StringFilter
  image: StringFilter
  alignment: StringFilter
  icon: StringFilter
  action: PageBlocksScreenShotFeatureActionFilter
  testimonial: PageBlocksScreenShotFeatureTestimonialFilter
}

input PageBlocksFilter {
  news: PageBlocksNewsFilter
  statsWithImage: PageBlocksStatsWithImageFilter
  hero: PageBlocksHeroFilter
  slideshow: PageBlocksSlideshowFilter
  comparisonTable: PageBlocksComparisonTableFilter
  fullScreenLogo: PageBlocksFullScreenLogoFilter
  fullScreenHeader: PageBlocksFullScreenHeaderFilter
  feature: PageBlocksFeatureFilter
  screenShotFeature: PageBlocksScreenShotFeatureFilter
}

input PageFilter {
  title: StringFilter
  link: StringFilter
  seo: PageSeoFilter
  blocks: PageBlocksFilter
}

input NavigationItemsPageFilter {
  page: PageFilter
}

input NavigationItemsFilter {
  page: NavigationItemsPageFilter
}

input NavigationFilter {
  items: NavigationItemsFilter
}

input DocumentFilter {
  localeInfo: LocaleInfoFilter
  news: NewsFilter
  footer: FooterFilter
  theme: ThemeFilter
  navigation: NavigationFilter
  page: PageFilter
}

type DocumentConnectionEdges {
  cursor: String
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String!
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Int, last: Int, filter: DocumentFilter): DocumentConnection!
}

union DocumentNode = LocaleInfoDocument | NewsDocument | FooterDocument | ThemeDocument | NavigationDocument | PageDocument

type LocaleInfoAu {
  tel: String
  signUpLink: String
  signUpLinkPersonal: String
  signInLink: String
}

type LocaleInfoUs {
  tel: String
  signUpLink: String
  signUpLinkPersonal: String
  signInLink: String
}

type LocaleInfoGb {
  tel: String
  signUpLink: String
  signUpLinkPersonal: String
  signInLink: String
}

type LocaleInfo {
  au: LocaleInfoAu
  us: LocaleInfoUs
  gb: LocaleInfoGb
}

type LocaleInfoDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: LocaleInfo!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type LocaleInfoConnectionEdges {
  cursor: String
  node: LocaleInfoDocument
}

type LocaleInfoConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [LocaleInfoConnectionEdges]
}

type News {
  title: String!
  subTitle: String
  description: String!
  image: String
  body: String
}

type NewsDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: News!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type NewsConnectionEdges {
  cursor: String
  node: NewsDocument
}

type NewsConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [NewsConnectionEdges]
}

type FooterOffices {
  location: String!
  address: String!
  phone: String!
}

type FooterDisclaimers {
  body: String
}

type Footer {
  offices: [FooterOffices]
  disclaimers: [FooterDisclaimers!]!
}

type FooterDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Footer!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type FooterConnectionEdges {
  cursor: String
  node: FooterDocument
}

type FooterConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [FooterConnectionEdges]
}

type Theme {
  displayFont: String
  colorMode: String
}

type ThemeDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Theme!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type ThemeConnectionEdges {
  cursor: String
  node: ThemeDocument
}

type ThemeConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [ThemeConnectionEdges]
}

union NavigationItemsPageDocument = PageDocument

type NavigationItems {
  page: NavigationItemsPageDocument
}

type Navigation {
  items: [NavigationItems!]!
}

type NavigationDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Navigation!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type NavigationConnectionEdges {
  cursor: String
  node: NavigationDocument
}

type NavigationConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [NavigationConnectionEdges]
}

type PageSeo {
  title: String
  image: String
  description: String!
}

union PageBlocksNewsNewsItemsArticleDocument = NewsDocument

type PageBlocksNewsNewsItems {
  article: PageBlocksNewsNewsItemsArticleDocument!
}

type PageBlocksNews {
  title: String!
  subTitle: String
  description: String!
  newsItems: [PageBlocksNewsNewsItems!]!
}

type PageBlocksStatsWithImageStats {
  title: String!
  subTitle: String
  description: String!
}

type PageBlocksStatsWithImage {
  title: String!
  subTitle: String
  description: String!
  image: String
  stats: [PageBlocksStatsWithImageStats!]!
}

type PageBlocksHeroAction {
  callToAction: String
  linkText: String!
  link: String!
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

type PageBlocksHero {
  title: String!
  subTitle: String
  description: String!
  style: String
  image: String
  action: PageBlocksHeroAction
}

type PageBlocksSlideshowItemsAction {
  callToAction: String
  linkText: String!
  link: String!
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

type PageBlocksSlideshowItems {
  title: String!
  subTitle: String
  description: String!
  image: String
  textColor: String
  action: PageBlocksSlideshowItemsAction
  overlayColor: String
  overlayOpacity: String
}

type PageBlocksSlideshow {
  items: [PageBlocksSlideshowItems]
}

type PageBlocksComparisonTableItems {
  title: String!
  subTitle: String
  description: String!
  bulletPoints: [String]
}

type PageBlocksComparisonTableAction {
  callToAction: String
  linkText: String!
  link: String!
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

type PageBlocksComparisonTable {
  title: String!
  subTitle: String
  description: String!
  items: [PageBlocksComparisonTableItems]
  action: PageBlocksComparisonTableAction
}

type PageBlocksFullScreenLogo {
  slogan: String
  link: String
  image: String
  textColor: String
  overlayColor: String
  overlayOpacity: String
}

type PageBlocksFullScreenHeaderAction {
  callToAction: String
  linkText: String!
  link: String!
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

type PageBlocksFullScreenHeader {
  title: String!
  subTitle: String
  description: String!
  action: PageBlocksFullScreenHeaderAction
  image: String
  textColor: String
  overlayColor: String
  overlayOpacity: String
}

type PageBlocksFeatureFeatures {
  icon: String!
  name: String!
  description: String!
}

type PageBlocksFeature {
  title: String!
  subTitle: String
  description: String!
  featureStyle: String
  features: [PageBlocksFeatureFeatures!]!
  image: String
  textColor: String
  overlayColor: String
  overlayOpacity: String
}

type PageBlocksScreenShotFeatureAction {
  callToAction: String
  linkText: String!
  link: String!
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

type PageBlocksScreenShotFeatureTestimonialAuthor {
  name: String!
  avatar: String!
}

type PageBlocksScreenShotFeatureTestimonial {
  quote: String!
  author: PageBlocksScreenShotFeatureTestimonialAuthor
}

type PageBlocksScreenShotFeature {
  title: String!
  subTitle: String
  description: String!
  image: String
  alignment: String
  icon: String
  action: PageBlocksScreenShotFeatureAction
  testimonial: PageBlocksScreenShotFeatureTestimonial
}

union PageBlocks = PageBlocksNews | PageBlocksStatsWithImage | PageBlocksHero | PageBlocksSlideshow | PageBlocksComparisonTable | PageBlocksFullScreenLogo | PageBlocksFullScreenHeader | PageBlocksFeature | PageBlocksScreenShotFeature

type Page {
  title: String!
  link: String!
  seo: PageSeo
  blocks: [PageBlocks]
}

type PageDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Page!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type PageConnectionEdges {
  cursor: String
  node: PageDocument
}

type PageConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [PageConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateLocaleInfoDocument(relativePath: String!, params: LocaleInfoMutation!): LocaleInfoDocument!
  createLocaleInfoDocument(relativePath: String!, params: LocaleInfoMutation!): LocaleInfoDocument!
  updateNewsDocument(relativePath: String!, params: NewsMutation!): NewsDocument!
  createNewsDocument(relativePath: String!, params: NewsMutation!): NewsDocument!
  updateFooterDocument(relativePath: String!, params: FooterMutation!): FooterDocument!
  createFooterDocument(relativePath: String!, params: FooterMutation!): FooterDocument!
  updateThemeDocument(relativePath: String!, params: ThemeMutation!): ThemeDocument!
  createThemeDocument(relativePath: String!, params: ThemeMutation!): ThemeDocument!
  updateNavigationDocument(relativePath: String!, params: NavigationMutation!): NavigationDocument!
  createNavigationDocument(relativePath: String!, params: NavigationMutation!): NavigationDocument!
  updatePageDocument(relativePath: String!, params: PageMutation!): PageDocument!
  createPageDocument(relativePath: String!, params: PageMutation!): PageDocument!
}

input DocumentMutation {
  localeInfo: LocaleInfoMutation
  news: NewsMutation
  footer: FooterMutation
  theme: ThemeMutation
  navigation: NavigationMutation
  page: PageMutation
}

input LocaleInfoAuMutation {
  tel: String
  signUpLink: String
  signUpLinkPersonal: String
  signInLink: String
}

input LocaleInfoUsMutation {
  tel: String
  signUpLink: String
  signUpLinkPersonal: String
  signInLink: String
}

input LocaleInfoGbMutation {
  tel: String
  signUpLink: String
  signUpLinkPersonal: String
  signInLink: String
}

input LocaleInfoMutation {
  au: LocaleInfoAuMutation
  us: LocaleInfoUsMutation
  gb: LocaleInfoGbMutation
}

input NewsMutation {
  title: String
  subTitle: String
  description: String
  image: String
  body: String
}

input FooterOfficesMutation {
  location: String
  address: String
  phone: String
}

input FooterDisclaimersMutation {
  body: String
}

input FooterMutation {
  offices: [FooterOfficesMutation]
  disclaimers: [FooterDisclaimersMutation]
}

input ThemeMutation {
  displayFont: String
  colorMode: String
}

input NavigationItemsMutation {
  page: String
}

input NavigationMutation {
  items: [NavigationItemsMutation]
}

input PageSeoMutation {
  title: String
  image: String
  description: String
}

input PageBlocksNewsNewsItemsMutation {
  article: String
}

input PageBlocksNewsMutation {
  title: String
  subTitle: String
  description: String
  newsItems: [PageBlocksNewsNewsItemsMutation]
}

input PageBlocksStatsWithImageStatsMutation {
  title: String
  subTitle: String
  description: String
}

input PageBlocksStatsWithImageMutation {
  title: String
  subTitle: String
  description: String
  image: String
  stats: [PageBlocksStatsWithImageStatsMutation]
}

input PageBlocksHeroActionMutation {
  callToAction: String
  linkText: String
  link: String
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

input PageBlocksHeroMutation {
  title: String
  subTitle: String
  description: String
  style: String
  image: String
  action: PageBlocksHeroActionMutation
}

input PageBlocksSlideshowItemsActionMutation {
  callToAction: String
  linkText: String
  link: String
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

input PageBlocksSlideshowItemsMutation {
  title: String
  subTitle: String
  description: String
  image: String
  textColor: String
  action: PageBlocksSlideshowItemsActionMutation
  overlayColor: String
  overlayOpacity: String
}

input PageBlocksSlideshowMutation {
  items: [PageBlocksSlideshowItemsMutation]
}

input PageBlocksComparisonTableItemsMutation {
  title: String
  subTitle: String
  description: String
  bulletPoints: [String]
}

input PageBlocksComparisonTableActionMutation {
  callToAction: String
  linkText: String
  link: String
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

input PageBlocksComparisonTableMutation {
  title: String
  subTitle: String
  description: String
  items: [PageBlocksComparisonTableItemsMutation]
  action: PageBlocksComparisonTableActionMutation
}

input PageBlocksFullScreenLogoMutation {
  slogan: String
  link: String
  image: String
  textColor: String
  overlayColor: String
  overlayOpacity: String
}

input PageBlocksFullScreenHeaderActionMutation {
  callToAction: String
  linkText: String
  link: String
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

input PageBlocksFullScreenHeaderMutation {
  title: String
  subTitle: String
  description: String
  action: PageBlocksFullScreenHeaderActionMutation
  image: String
  textColor: String
  overlayColor: String
  overlayOpacity: String
}

input PageBlocksFeatureFeaturesMutation {
  icon: String
  name: String
  description: String
}

input PageBlocksFeatureMutation {
  title: String
  subTitle: String
  description: String
  featureStyle: String
  features: [PageBlocksFeatureFeaturesMutation]
  image: String
  textColor: String
  overlayColor: String
  overlayOpacity: String
}

input PageBlocksScreenShotFeatureActionMutation {
  callToAction: String
  linkText: String
  link: String
  linkOverride: String
  secondaryText: String
  secondaryLink: String
  secondaryLinkOverride: String
}

input PageBlocksScreenShotFeatureTestimonialAuthorMutation {
  name: String
  avatar: String
}

input PageBlocksScreenShotFeatureTestimonialMutation {
  quote: String
  author: PageBlocksScreenShotFeatureTestimonialAuthorMutation
}

input PageBlocksScreenShotFeatureMutation {
  title: String
  subTitle: String
  description: String
  image: String
  alignment: String
  icon: String
  action: PageBlocksScreenShotFeatureActionMutation
  testimonial: PageBlocksScreenShotFeatureTestimonialMutation
}

input PageBlocksMutation {
  news: PageBlocksNewsMutation
  statsWithImage: PageBlocksStatsWithImageMutation
  hero: PageBlocksHeroMutation
  slideshow: PageBlocksSlideshowMutation
  comparisonTable: PageBlocksComparisonTableMutation
  fullScreenLogo: PageBlocksFullScreenLogoMutation
  fullScreenHeader: PageBlocksFullScreenHeaderMutation
  feature: PageBlocksFeatureMutation
  screenShotFeature: PageBlocksScreenShotFeatureMutation
}

input PageMutation {
  title: String
  link: String
  seo: PageSeoMutation
  blocks: [PageBlocksMutation]
}

schema {
  query: Query
  mutation: Mutation
}
  