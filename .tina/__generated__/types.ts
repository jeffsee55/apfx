//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  localeInfo: LocaleInfo;
  localeInfoConnection: LocaleInfoConnection;
  news: News;
  newsConnection: NewsConnection;
  footer: Footer;
  footerConnection: FooterConnection;
  theme: Theme;
  themeConnection: ThemeConnection;
  navigation: Navigation;
  navigationConnection: NavigationConnection;
  page: Page;
  pageConnection: PageConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryLocaleInfoArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryLocaleInfoConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<LocaleInfoFilter>;
};


export type QueryNewsArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryNewsConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<NewsFilter>;
};


export type QueryFooterArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryFooterConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<FooterFilter>;
};


export type QueryThemeArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryThemeConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<ThemeFilter>;
};


export type QueryNavigationArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryNavigationConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<NavigationFilter>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
};

export type DocumentFilter = {
  localeInfo?: InputMaybe<LocaleInfoFilter>;
  news?: InputMaybe<NewsFilter>;
  footer?: InputMaybe<FooterFilter>;
  theme?: InputMaybe<ThemeFilter>;
  navigation?: InputMaybe<NavigationFilter>;
  page?: InputMaybe<PageFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = LocaleInfo | News | Footer | Theme | Navigation | Page;

export type LocaleInfoAu = {
  __typename?: 'LocaleInfoAu';
  tel?: Maybe<Scalars['String']>;
  signUpLink?: Maybe<Scalars['String']>;
  signUpLinkPersonal?: Maybe<Scalars['String']>;
  signInLink?: Maybe<Scalars['String']>;
};

export type LocaleInfoUs = {
  __typename?: 'LocaleInfoUs';
  tel?: Maybe<Scalars['String']>;
  signUpLink?: Maybe<Scalars['String']>;
  signUpLinkPersonal?: Maybe<Scalars['String']>;
  signInLink?: Maybe<Scalars['String']>;
};

export type LocaleInfoGb = {
  __typename?: 'LocaleInfoGb';
  tel?: Maybe<Scalars['String']>;
  signUpLink?: Maybe<Scalars['String']>;
  signUpLinkPersonal?: Maybe<Scalars['String']>;
  signInLink?: Maybe<Scalars['String']>;
};

export type LocaleInfo = Node & Document & {
  __typename?: 'LocaleInfo';
  au?: Maybe<LocaleInfoAu>;
  us?: Maybe<LocaleInfoUs>;
  gb?: Maybe<LocaleInfoGb>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type LocaleInfoAuFilter = {
  tel?: InputMaybe<StringFilter>;
  signUpLink?: InputMaybe<StringFilter>;
  signUpLinkPersonal?: InputMaybe<StringFilter>;
  signInLink?: InputMaybe<StringFilter>;
};

export type LocaleInfoUsFilter = {
  tel?: InputMaybe<StringFilter>;
  signUpLink?: InputMaybe<StringFilter>;
  signUpLinkPersonal?: InputMaybe<StringFilter>;
  signInLink?: InputMaybe<StringFilter>;
};

export type LocaleInfoGbFilter = {
  tel?: InputMaybe<StringFilter>;
  signUpLink?: InputMaybe<StringFilter>;
  signUpLinkPersonal?: InputMaybe<StringFilter>;
  signInLink?: InputMaybe<StringFilter>;
};

export type LocaleInfoFilter = {
  au?: InputMaybe<LocaleInfoAuFilter>;
  us?: InputMaybe<LocaleInfoUsFilter>;
  gb?: InputMaybe<LocaleInfoGbFilter>;
};

export type LocaleInfoConnectionEdges = {
  __typename?: 'LocaleInfoConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<LocaleInfo>;
};

export type LocaleInfoConnection = Connection & {
  __typename?: 'LocaleInfoConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<LocaleInfoConnectionEdges>>>;
};

export type News = Node & Document & {
  __typename?: 'News';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  publishDate?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type DatetimeFilter = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type NewsFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringFilter>;
  publishDate?: InputMaybe<DatetimeFilter>;
  category?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
};

export type NewsConnectionEdges = {
  __typename?: 'NewsConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<News>;
};

export type NewsConnection = Connection & {
  __typename?: 'NewsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<NewsConnectionEdges>>>;
};

export type FooterOffices = {
  __typename?: 'FooterOffices';
  location: Scalars['String'];
  address: Scalars['String'];
  phone: Scalars['String'];
};

export type FooterDisclaimers = {
  __typename?: 'FooterDisclaimers';
  body?: Maybe<Scalars['JSON']>;
};

export type Footer = Node & Document & {
  __typename?: 'Footer';
  offices?: Maybe<Array<Maybe<FooterOffices>>>;
  disclaimers?: Maybe<Array<Maybe<FooterDisclaimers>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type FooterOfficesFilter = {
  location?: InputMaybe<StringFilter>;
  address?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringFilter>;
};

export type FooterDisclaimersFilter = {
  body?: InputMaybe<RichTextFilter>;
};

export type FooterFilter = {
  offices?: InputMaybe<FooterOfficesFilter>;
  disclaimers?: InputMaybe<FooterDisclaimersFilter>;
};

export type FooterConnectionEdges = {
  __typename?: 'FooterConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Footer>;
};

export type FooterConnection = Connection & {
  __typename?: 'FooterConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<FooterConnectionEdges>>>;
};

export type Theme = Node & Document & {
  __typename?: 'Theme';
  displayFont?: Maybe<Scalars['String']>;
  colorMode?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type ThemeFilter = {
  displayFont?: InputMaybe<StringFilter>;
  colorMode?: InputMaybe<StringFilter>;
};

export type ThemeConnectionEdges = {
  __typename?: 'ThemeConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Theme>;
};

export type ThemeConnection = Connection & {
  __typename?: 'ThemeConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<ThemeConnectionEdges>>>;
};

export type NavigationItemsPage = Page;

export type NavigationItems = {
  __typename?: 'NavigationItems';
  page?: Maybe<NavigationItemsPage>;
};

export type Navigation = Node & Document & {
  __typename?: 'Navigation';
  items?: Maybe<Array<Maybe<NavigationItems>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type NavigationItemsPageFilter = {
  page?: InputMaybe<PageFilter>;
};

export type NavigationItemsFilter = {
  page?: InputMaybe<NavigationItemsPageFilter>;
};

export type NavigationFilter = {
  items?: InputMaybe<NavigationItemsFilter>;
};

export type NavigationConnectionEdges = {
  __typename?: 'NavigationConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Navigation>;
};

export type NavigationConnection = Connection & {
  __typename?: 'NavigationConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<NavigationConnectionEdges>>>;
};

export type PageSeo = {
  __typename?: 'PageSeo';
  title?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  description: Scalars['String'];
};

export type PageBlocksNewsNewsItemsArticle = News;

export type PageBlocksNewsNewsItems = {
  __typename?: 'PageBlocksNewsNewsItems';
  article: PageBlocksNewsNewsItemsArticle;
};

export type PageBlocksNews = {
  __typename?: 'PageBlocksNews';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  newsItems: Array<PageBlocksNewsNewsItems>;
};

export type PageBlocksStatsWithImageStats = {
  __typename?: 'PageBlocksStatsWithImageStats';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
};

export type PageBlocksStatsWithImage = {
  __typename?: 'PageBlocksStatsWithImage';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  image?: Maybe<Scalars['String']>;
  stats?: Maybe<Array<Maybe<PageBlocksStatsWithImageStats>>>;
};

export type PageBlocksHeroAction = {
  __typename?: 'PageBlocksHeroAction';
  callToAction?: Maybe<Scalars['String']>;
  linkText?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  linkOverride?: Maybe<Scalars['String']>;
  secondaryText?: Maybe<Scalars['String']>;
  secondaryLink?: Maybe<Scalars['String']>;
  secondaryLinkOverride?: Maybe<Scalars['String']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  image?: Maybe<Scalars['String']>;
  action?: Maybe<PageBlocksHeroAction>;
};

export type PageBlocksSlideshowItemsAction = {
  __typename?: 'PageBlocksSlideshowItemsAction';
  callToAction?: Maybe<Scalars['String']>;
  linkText?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  linkOverride?: Maybe<Scalars['String']>;
  secondaryText?: Maybe<Scalars['String']>;
  secondaryLink?: Maybe<Scalars['String']>;
  secondaryLinkOverride?: Maybe<Scalars['String']>;
};

export type PageBlocksSlideshowItemsOverlay = {
  __typename?: 'PageBlocksSlideshowItemsOverlay';
  image?: Maybe<Scalars['String']>;
  overlayColor?: Maybe<Scalars['String']>;
  overlayOpacity?: Maybe<Scalars['String']>;
};

export type PageBlocksSlideshowItems = {
  __typename?: 'PageBlocksSlideshowItems';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  action?: Maybe<PageBlocksSlideshowItemsAction>;
  overlay?: Maybe<PageBlocksSlideshowItemsOverlay>;
};

export type PageBlocksSlideshow = {
  __typename?: 'PageBlocksSlideshow';
  items?: Maybe<Array<Maybe<PageBlocksSlideshowItems>>>;
};

export type PageBlocksComparisonTableItemsMetaA = {
  __typename?: 'PageBlocksComparisonTableItemsMetaA';
  aOne?: Maybe<Scalars['String']>;
};

export type PageBlocksComparisonTableItemsMetaB = {
  __typename?: 'PageBlocksComparisonTableItemsMetaB';
  bOne?: Maybe<Scalars['String']>;
};

export type PageBlocksComparisonTableItemsMeta = PageBlocksComparisonTableItemsMetaA | PageBlocksComparisonTableItemsMetaB;

export type PageBlocksComparisonTableItems = {
  __typename?: 'PageBlocksComparisonTableItems';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  bulletPoints?: Maybe<Array<Maybe<Scalars['String']>>>;
  meta?: Maybe<Array<Maybe<PageBlocksComparisonTableItemsMeta>>>;
};

export type PageBlocksComparisonTableAction = {
  __typename?: 'PageBlocksComparisonTableAction';
  callToAction?: Maybe<Scalars['String']>;
  linkText?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  linkOverride?: Maybe<Scalars['String']>;
  secondaryText?: Maybe<Scalars['String']>;
  secondaryLink?: Maybe<Scalars['String']>;
  secondaryLinkOverride?: Maybe<Scalars['String']>;
};

export type PageBlocksComparisonTable = {
  __typename?: 'PageBlocksComparisonTable';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  items?: Maybe<Array<Maybe<PageBlocksComparisonTableItems>>>;
  action?: Maybe<PageBlocksComparisonTableAction>;
};

export type PageBlocksFeatureFeatures = {
  __typename?: 'PageBlocksFeatureFeatures';
  icon: Scalars['String'];
  name: Scalars['String'];
  description: Scalars['JSON'];
};

export type PageBlocksFeatureOverlay = {
  __typename?: 'PageBlocksFeatureOverlay';
  image?: Maybe<Scalars['String']>;
  overlayColor?: Maybe<Scalars['String']>;
  overlayOpacity?: Maybe<Scalars['String']>;
};

export type PageBlocksFeature = {
  __typename?: 'PageBlocksFeature';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  featureStyle?: Maybe<Scalars['String']>;
  features: Array<PageBlocksFeatureFeatures>;
  overlay?: Maybe<PageBlocksFeatureOverlay>;
};

export type PageBlocksFullScreenLogoOverlay = {
  __typename?: 'PageBlocksFullScreenLogoOverlay';
  image?: Maybe<Scalars['String']>;
  overlayColor?: Maybe<Scalars['String']>;
  overlayOpacity?: Maybe<Scalars['String']>;
};

export type PageBlocksFullScreenLogo = {
  __typename?: 'PageBlocksFullScreenLogo';
  slogan?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  overlay?: Maybe<PageBlocksFullScreenLogoOverlay>;
};

export type PageBlocksFullScreenHeaderAction = {
  __typename?: 'PageBlocksFullScreenHeaderAction';
  callToAction?: Maybe<Scalars['String']>;
  linkText?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  linkOverride?: Maybe<Scalars['String']>;
  secondaryText?: Maybe<Scalars['String']>;
  secondaryLink?: Maybe<Scalars['String']>;
  secondaryLinkOverride?: Maybe<Scalars['String']>;
};

export type PageBlocksFullScreenHeaderOverlay = {
  __typename?: 'PageBlocksFullScreenHeaderOverlay';
  image?: Maybe<Scalars['String']>;
  overlayColor?: Maybe<Scalars['String']>;
  overlayOpacity?: Maybe<Scalars['String']>;
};

export type PageBlocksFullScreenHeader = {
  __typename?: 'PageBlocksFullScreenHeader';
  title: Scalars['String'];
  subTitle?: Maybe<Scalars['String']>;
  description: Scalars['JSON'];
  action?: Maybe<PageBlocksFullScreenHeaderAction>;
  overlay?: Maybe<PageBlocksFullScreenHeaderOverlay>;
};

export type PageBlocks = PageBlocksNews | PageBlocksStatsWithImage | PageBlocksHero | PageBlocksSlideshow | PageBlocksComparisonTable | PageBlocksFeature | PageBlocksFullScreenLogo | PageBlocksFullScreenHeader;

export type Page = Node & Document & {
  __typename?: 'Page';
  title: Scalars['String'];
  link: Scalars['String'];
  seo?: Maybe<PageSeo>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type PageSeoFilter = {
  title?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
};

export type PageBlocksNewsNewsItemsArticleFilter = {
  news?: InputMaybe<NewsFilter>;
};

export type PageBlocksNewsNewsItemsFilter = {
  article?: InputMaybe<PageBlocksNewsNewsItemsArticleFilter>;
};

export type PageBlocksNewsFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  newsItems?: InputMaybe<PageBlocksNewsNewsItemsFilter>;
};

export type PageBlocksStatsWithImageStatsFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
};

export type PageBlocksStatsWithImageFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  image?: InputMaybe<StringFilter>;
  stats?: InputMaybe<PageBlocksStatsWithImageStatsFilter>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type PageBlocksHeroActionFilter = {
  callToAction?: InputMaybe<StringFilter>;
  linkText?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  linkOverride?: InputMaybe<StringFilter>;
  secondaryText?: InputMaybe<StringFilter>;
  secondaryLink?: InputMaybe<StringFilter>;
  secondaryLinkOverride?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  image?: InputMaybe<ImageFilter>;
  action?: InputMaybe<PageBlocksHeroActionFilter>;
};

export type PageBlocksSlideshowItemsActionFilter = {
  callToAction?: InputMaybe<StringFilter>;
  linkText?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  linkOverride?: InputMaybe<StringFilter>;
  secondaryText?: InputMaybe<StringFilter>;
  secondaryLink?: InputMaybe<StringFilter>;
  secondaryLinkOverride?: InputMaybe<StringFilter>;
};

export type PageBlocksSlideshowItemsOverlayFilter = {
  image?: InputMaybe<ImageFilter>;
  overlayColor?: InputMaybe<StringFilter>;
  overlayOpacity?: InputMaybe<StringFilter>;
};

export type PageBlocksSlideshowItemsFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  action?: InputMaybe<PageBlocksSlideshowItemsActionFilter>;
  overlay?: InputMaybe<PageBlocksSlideshowItemsOverlayFilter>;
};

export type PageBlocksSlideshowFilter = {
  items?: InputMaybe<PageBlocksSlideshowItemsFilter>;
};

export type PageBlocksComparisonTableItemsMetaAFilter = {
  aOne?: InputMaybe<StringFilter>;
};

export type PageBlocksComparisonTableItemsMetaBFilter = {
  bOne?: InputMaybe<StringFilter>;
};

export type PageBlocksComparisonTableItemsMetaFilter = {
  a?: InputMaybe<PageBlocksComparisonTableItemsMetaAFilter>;
  b?: InputMaybe<PageBlocksComparisonTableItemsMetaBFilter>;
};

export type PageBlocksComparisonTableItemsFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  bulletPoints?: InputMaybe<StringFilter>;
  meta?: InputMaybe<PageBlocksComparisonTableItemsMetaFilter>;
};

export type PageBlocksComparisonTableActionFilter = {
  callToAction?: InputMaybe<StringFilter>;
  linkText?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  linkOverride?: InputMaybe<StringFilter>;
  secondaryText?: InputMaybe<StringFilter>;
  secondaryLink?: InputMaybe<StringFilter>;
  secondaryLinkOverride?: InputMaybe<StringFilter>;
};

export type PageBlocksComparisonTableFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  items?: InputMaybe<PageBlocksComparisonTableItemsFilter>;
  action?: InputMaybe<PageBlocksComparisonTableActionFilter>;
};

export type PageBlocksFeatureFeaturesFilter = {
  icon?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
};

export type PageBlocksFeatureOverlayFilter = {
  image?: InputMaybe<ImageFilter>;
  overlayColor?: InputMaybe<StringFilter>;
  overlayOpacity?: InputMaybe<StringFilter>;
};

export type PageBlocksFeatureFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  featureStyle?: InputMaybe<StringFilter>;
  features?: InputMaybe<PageBlocksFeatureFeaturesFilter>;
  overlay?: InputMaybe<PageBlocksFeatureOverlayFilter>;
};

export type PageBlocksFullScreenLogoOverlayFilter = {
  image?: InputMaybe<ImageFilter>;
  overlayColor?: InputMaybe<StringFilter>;
  overlayOpacity?: InputMaybe<StringFilter>;
};

export type PageBlocksFullScreenLogoFilter = {
  slogan?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  overlay?: InputMaybe<PageBlocksFullScreenLogoOverlayFilter>;
};

export type PageBlocksFullScreenHeaderActionFilter = {
  callToAction?: InputMaybe<StringFilter>;
  linkText?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  linkOverride?: InputMaybe<StringFilter>;
  secondaryText?: InputMaybe<StringFilter>;
  secondaryLink?: InputMaybe<StringFilter>;
  secondaryLinkOverride?: InputMaybe<StringFilter>;
};

export type PageBlocksFullScreenHeaderOverlayFilter = {
  image?: InputMaybe<ImageFilter>;
  overlayColor?: InputMaybe<StringFilter>;
  overlayOpacity?: InputMaybe<StringFilter>;
};

export type PageBlocksFullScreenHeaderFilter = {
  title?: InputMaybe<StringFilter>;
  subTitle?: InputMaybe<StringFilter>;
  description?: InputMaybe<RichTextFilter>;
  action?: InputMaybe<PageBlocksFullScreenHeaderActionFilter>;
  overlay?: InputMaybe<PageBlocksFullScreenHeaderOverlayFilter>;
};

export type PageBlocksFilter = {
  news?: InputMaybe<PageBlocksNewsFilter>;
  statsWithImage?: InputMaybe<PageBlocksStatsWithImageFilter>;
  hero?: InputMaybe<PageBlocksHeroFilter>;
  slideshow?: InputMaybe<PageBlocksSlideshowFilter>;
  comparisonTable?: InputMaybe<PageBlocksComparisonTableFilter>;
  feature?: InputMaybe<PageBlocksFeatureFilter>;
  fullScreenLogo?: InputMaybe<PageBlocksFullScreenLogoFilter>;
  fullScreenHeader?: InputMaybe<PageBlocksFullScreenHeaderFilter>;
};

export type PageFilter = {
  title?: InputMaybe<StringFilter>;
  link?: InputMaybe<StringFilter>;
  seo?: InputMaybe<PageSeoFilter>;
  blocks?: InputMaybe<PageBlocksFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updateLocaleInfo: LocaleInfo;
  createLocaleInfo: LocaleInfo;
  updateNews: News;
  createNews: News;
  updateFooter: Footer;
  createFooter: Footer;
  updateTheme: Theme;
  createTheme: Theme;
  updateNavigation: Navigation;
  createNavigation: Navigation;
  updatePage: Page;
  createPage: Page;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateLocaleInfoArgs = {
  relativePath: Scalars['String'];
  params: LocaleInfoMutation;
};


export type MutationCreateLocaleInfoArgs = {
  relativePath: Scalars['String'];
  params: LocaleInfoMutation;
};


export type MutationUpdateNewsArgs = {
  relativePath: Scalars['String'];
  params: NewsMutation;
};


export type MutationCreateNewsArgs = {
  relativePath: Scalars['String'];
  params: NewsMutation;
};


export type MutationUpdateFooterArgs = {
  relativePath: Scalars['String'];
  params: FooterMutation;
};


export type MutationCreateFooterArgs = {
  relativePath: Scalars['String'];
  params: FooterMutation;
};


export type MutationUpdateThemeArgs = {
  relativePath: Scalars['String'];
  params: ThemeMutation;
};


export type MutationCreateThemeArgs = {
  relativePath: Scalars['String'];
  params: ThemeMutation;
};


export type MutationUpdateNavigationArgs = {
  relativePath: Scalars['String'];
  params: NavigationMutation;
};


export type MutationCreateNavigationArgs = {
  relativePath: Scalars['String'];
  params: NavigationMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};

export type DocumentMutation = {
  localeInfo?: InputMaybe<LocaleInfoMutation>;
  news?: InputMaybe<NewsMutation>;
  footer?: InputMaybe<FooterMutation>;
  theme?: InputMaybe<ThemeMutation>;
  navigation?: InputMaybe<NavigationMutation>;
  page?: InputMaybe<PageMutation>;
};

export type LocaleInfoAuMutation = {
  tel?: InputMaybe<Scalars['String']>;
  signUpLink?: InputMaybe<Scalars['String']>;
  signUpLinkPersonal?: InputMaybe<Scalars['String']>;
  signInLink?: InputMaybe<Scalars['String']>;
};

export type LocaleInfoUsMutation = {
  tel?: InputMaybe<Scalars['String']>;
  signUpLink?: InputMaybe<Scalars['String']>;
  signUpLinkPersonal?: InputMaybe<Scalars['String']>;
  signInLink?: InputMaybe<Scalars['String']>;
};

export type LocaleInfoGbMutation = {
  tel?: InputMaybe<Scalars['String']>;
  signUpLink?: InputMaybe<Scalars['String']>;
  signUpLinkPersonal?: InputMaybe<Scalars['String']>;
  signInLink?: InputMaybe<Scalars['String']>;
};

export type LocaleInfoMutation = {
  au?: InputMaybe<LocaleInfoAuMutation>;
  us?: InputMaybe<LocaleInfoUsMutation>;
  gb?: InputMaybe<LocaleInfoGbMutation>;
};

export type NewsMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  publishDate?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
};

export type FooterOfficesMutation = {
  location?: InputMaybe<Scalars['String']>;
  address?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
};

export type FooterDisclaimersMutation = {
  body?: InputMaybe<Scalars['JSON']>;
};

export type FooterMutation = {
  offices?: InputMaybe<Array<InputMaybe<FooterOfficesMutation>>>;
  disclaimers?: InputMaybe<Array<InputMaybe<FooterDisclaimersMutation>>>;
};

export type ThemeMutation = {
  displayFont?: InputMaybe<Scalars['String']>;
  colorMode?: InputMaybe<Scalars['String']>;
};

export type NavigationItemsMutation = {
  page?: InputMaybe<Scalars['String']>;
};

export type NavigationMutation = {
  items?: InputMaybe<Array<InputMaybe<NavigationItemsMutation>>>;
};

export type PageSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
};

export type PageBlocksNewsNewsItemsMutation = {
  article?: InputMaybe<Scalars['String']>;
};

export type PageBlocksNewsMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  newsItems?: InputMaybe<Array<InputMaybe<PageBlocksNewsNewsItemsMutation>>>;
};

export type PageBlocksStatsWithImageStatsMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksStatsWithImageMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  image?: InputMaybe<Scalars['String']>;
  stats?: InputMaybe<Array<InputMaybe<PageBlocksStatsWithImageStatsMutation>>>;
};

export type PageBlocksHeroActionMutation = {
  callToAction?: InputMaybe<Scalars['String']>;
  linkText?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  linkOverride?: InputMaybe<Scalars['String']>;
  secondaryText?: InputMaybe<Scalars['String']>;
  secondaryLink?: InputMaybe<Scalars['String']>;
  secondaryLinkOverride?: InputMaybe<Scalars['String']>;
};

export type PageBlocksHeroMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  image?: InputMaybe<Scalars['String']>;
  action?: InputMaybe<PageBlocksHeroActionMutation>;
};

export type PageBlocksSlideshowItemsActionMutation = {
  callToAction?: InputMaybe<Scalars['String']>;
  linkText?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  linkOverride?: InputMaybe<Scalars['String']>;
  secondaryText?: InputMaybe<Scalars['String']>;
  secondaryLink?: InputMaybe<Scalars['String']>;
  secondaryLinkOverride?: InputMaybe<Scalars['String']>;
};

export type PageBlocksSlideshowItemsOverlayMutation = {
  image?: InputMaybe<Scalars['String']>;
  overlayColor?: InputMaybe<Scalars['String']>;
  overlayOpacity?: InputMaybe<Scalars['String']>;
};

export type PageBlocksSlideshowItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  action?: InputMaybe<PageBlocksSlideshowItemsActionMutation>;
  overlay?: InputMaybe<PageBlocksSlideshowItemsOverlayMutation>;
};

export type PageBlocksSlideshowMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksSlideshowItemsMutation>>>;
};

export type PageBlocksComparisonTableItemsMetaAMutation = {
  aOne?: InputMaybe<Scalars['String']>;
};

export type PageBlocksComparisonTableItemsMetaBMutation = {
  bOne?: InputMaybe<Scalars['String']>;
};

export type PageBlocksComparisonTableItemsMetaMutation = {
  a?: InputMaybe<PageBlocksComparisonTableItemsMetaAMutation>;
  b?: InputMaybe<PageBlocksComparisonTableItemsMetaBMutation>;
};

export type PageBlocksComparisonTableItemsMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  bulletPoints?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  meta?: InputMaybe<Array<InputMaybe<PageBlocksComparisonTableItemsMetaMutation>>>;
};

export type PageBlocksComparisonTableActionMutation = {
  callToAction?: InputMaybe<Scalars['String']>;
  linkText?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  linkOverride?: InputMaybe<Scalars['String']>;
  secondaryText?: InputMaybe<Scalars['String']>;
  secondaryLink?: InputMaybe<Scalars['String']>;
  secondaryLinkOverride?: InputMaybe<Scalars['String']>;
};

export type PageBlocksComparisonTableMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  items?: InputMaybe<Array<InputMaybe<PageBlocksComparisonTableItemsMutation>>>;
  action?: InputMaybe<PageBlocksComparisonTableActionMutation>;
};

export type PageBlocksFeatureFeaturesMutation = {
  icon?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksFeatureOverlayMutation = {
  image?: InputMaybe<Scalars['String']>;
  overlayColor?: InputMaybe<Scalars['String']>;
  overlayOpacity?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFeatureMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  featureStyle?: InputMaybe<Scalars['String']>;
  features?: InputMaybe<Array<InputMaybe<PageBlocksFeatureFeaturesMutation>>>;
  overlay?: InputMaybe<PageBlocksFeatureOverlayMutation>;
};

export type PageBlocksFullScreenLogoOverlayMutation = {
  image?: InputMaybe<Scalars['String']>;
  overlayColor?: InputMaybe<Scalars['String']>;
  overlayOpacity?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFullScreenLogoMutation = {
  slogan?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  overlay?: InputMaybe<PageBlocksFullScreenLogoOverlayMutation>;
};

export type PageBlocksFullScreenHeaderActionMutation = {
  callToAction?: InputMaybe<Scalars['String']>;
  linkText?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  linkOverride?: InputMaybe<Scalars['String']>;
  secondaryText?: InputMaybe<Scalars['String']>;
  secondaryLink?: InputMaybe<Scalars['String']>;
  secondaryLinkOverride?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFullScreenHeaderOverlayMutation = {
  image?: InputMaybe<Scalars['String']>;
  overlayColor?: InputMaybe<Scalars['String']>;
  overlayOpacity?: InputMaybe<Scalars['String']>;
};

export type PageBlocksFullScreenHeaderMutation = {
  title?: InputMaybe<Scalars['String']>;
  subTitle?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['JSON']>;
  action?: InputMaybe<PageBlocksFullScreenHeaderActionMutation>;
  overlay?: InputMaybe<PageBlocksFullScreenHeaderOverlayMutation>;
};

export type PageBlocksMutation = {
  news?: InputMaybe<PageBlocksNewsMutation>;
  statsWithImage?: InputMaybe<PageBlocksStatsWithImageMutation>;
  hero?: InputMaybe<PageBlocksHeroMutation>;
  slideshow?: InputMaybe<PageBlocksSlideshowMutation>;
  comparisonTable?: InputMaybe<PageBlocksComparisonTableMutation>;
  feature?: InputMaybe<PageBlocksFeatureMutation>;
  fullScreenLogo?: InputMaybe<PageBlocksFullScreenLogoMutation>;
  fullScreenHeader?: InputMaybe<PageBlocksFullScreenHeaderMutation>;
};

export type PageMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<PageSeoMutation>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};


export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
  
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

